{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;kBAAe,IAAI;;;;oBACF,MAAM;;;;AAEvB,SAAS,eAAe,GAAe;QAAd,OAAO,yDAAG,EAAE;;AACjC,WAAO;AACH,aAAK,EAAE,eAAC,QAAQ,EAAK;AACjB,gBAAI,OAAO,CAAC,UAAU,EAAE;AACpB,uBAAO,CAAC,UAAU,CAAC,OAAO,CAAC,UAAC,SAAS,EAAK;AACtC,wBAAI,OAAO,SAAS,KAAK,QAAQ,EAAE;AAC/B,8BAAM,IAAI,KAAK,CAAI,SAAS,uCAAoC,CAAC;qBACpE;iBACJ,CAAC,CAAC;aACN;;AAED,oBAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,UAAC,KAAK,EAAK;AAC/B,oBAAI,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,EAAE;AACjC,2BAAO;iBACV;;AAED,qBAAK,CAAC,WAAW,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,KAAK,EAAK;AACxC,yBAAK,CAAC,KAAK,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAK;AAC9B,4BAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AAC1C,4BAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAC3C,EAAE,OAAO,CAAC,UAAU,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAA,AAAC,EAAE;AAC7C,mCAAO;yBACV;;AAED,4BAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE;AAC/B,kCAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;yBAClD;;AAED,4BAAM,QAAQ,GAAG,kBAAK,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;;;AAGnE,wCAAG,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,EAAE,UAAC,KAAK,EAAK;AAC9C,gCAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,QAAQ,EAAE;AAClC,sCAAM,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;6BAC1B;;AAED,oCAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,EAAE,UAAC,SAAS,EAAE,IAAI,EAAK;AACvE,oCAAI,SAAS,EAAE;AACX,0CAAM,IAAI,KAAK,CAAC,yBAAyB,CAAC,CAAC;iCAC9C;AACD,gDAAG,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAC,UAAU,EAAK;AACzC,wCAAI,UAAU,EAAE;AACZ,8CAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;qCAChD;iCACJ,CAAC,CAAC;6BACN,CAAC,CAAC;yBACN,CAAC,CAAC;qBACN,CAAC,CAAC;iBACN,CAAC,CAAC;aACN,CAAC,CAAC;SACN;KACJ,CAAC;CACL;;qBAEc,eAAe","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\n\nfunction WriteFilePlugin(options = {}) {\n    return {\n        apply: (compiler) => {\n            if (options.extensions) {\n                options.extensions.forEach((extension) => {\n                    if (typeof extension !== 'string') {\n                        throw new Error(`${extension}: all extensions must be a string`);\n                    }\n                });\n            }\n\n            compiler.plugin('done', (stats) => {\n                if (stats.compilation.errors.length) {\n                    return;\n                }\n\n                stats.compilation.chunks.forEach((chunk) => {\n                    chunk.files.forEach((fileName) => {\n                        const fileExt = fileName.split('.').pop();\n                        if (options.extensions && options.extensions[0] &&\n                            !(options.extensions.indexOf(fileExt) > -1)) {\n                            return;\n                        }\n\n                        if (!compiler.options.output.path) {\n                            throw new Error('output.path is not defined.');\n                        }\n\n                        const filePath = path.join(compiler.options.output.path, fileName);\n\n                        // Only creates a directory one-level deep.\n                        fs.mkdir(compiler.options.output.path, (error) => {\n                            if (error && error.code !== 'EEXIST') {\n                                throw new Error(error);\n                            }\n\n                            compiler.outputFileSystem.readFile(filePath, 'utf-8', (errorRead, body) => {\n                                if (errorRead) {\n                                    throw new Error('Cannot read input file.');\n                                }\n                                fs.writeFile(filePath, body, (errorWrite) => {\n                                    if (errorWrite) {\n                                        throw new Error('Cannot write output file.');\n                                    }\n                                });\n                            });\n                        });\n                    });\n                });\n            });\n        }\n    };\n}\n\nexport default WriteFilePlugin;\n"],"sourceRoot":"/source/"}